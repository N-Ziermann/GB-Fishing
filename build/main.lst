                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12439 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _handleInput
                                     13 	.globl _storeFish
                                     14 	.globl _onCatchFish
                                     15 	.globl _collideWith
                                     16 	.globl _randomRange
                                     17 	.globl _init
                                     18 	.globl _moveFishTo
                                     19 	.globl _rand
                                     20 	.globl _initrand
                                     21 	.globl _puts
                                     22 	.globl _color
                                     23 	.globl _line
                                     24 	.globl _set_sprite_data
                                     25 	.globl _wait_vbl_done
                                     26 	.globl _waitpad
                                     27 	.globl _joypad
                                     28 	.globl _i
                                     29 	.globl _seed
                                     30 	.globl _fishingRod
                                     31 	.globl _fish1
                                     32 	.globl _spriteSize
                                     33 	.globl _CAN
                                     34 	.globl _ROD
                                     35 	.globl _FISH
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area _DATA
      000000                         43 _fish1::
      000000                         44 	.ds 4
      000004                         45 _fishingRod::
      000004                         46 	.ds 4
      000008                         47 _seed::
      000008                         48 	.ds 2
                                     49 ;--------------------------------------------------------
                                     50 ; ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area _INITIALIZED
      000000                         53 _i::
      000000                         54 	.ds 1
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _DABS (ABS)
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area _HOME
                                     63 	.area _GSINIT
                                     64 	.area _GSFINAL
                                     65 	.area _GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area _HOME
                                     70 	.area _HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area _CODE
                                     75 ;main.c:39: void moveFishTo(Fish *f, UINT8 x, UINT8 y) {
                                     76 ;	---------------------------------
                                     77 ; Function moveFishTo
                                     78 ; ---------------------------------
      000000                         79 _moveFishTo::
      000000 3B                      80 	dec	sp
      000001 3B                      81 	dec	sp
                                     82 ;main.c:40: f->x = x;
      000002 F8 04                   83 	ldhl	sp,	#4
      000004 2A                      84 	ld	a, (hl+)
      000005 5F                      85 	ld	e, a
      000006 2A                      86 	ld	a, (hl+)
      000007 57                      87 	ld	d, a
                                     88 ;main.c:41: f->y = y;
      000008 2A                      89 	ld	a, (hl+)
      000009 12                      90 	ld	(de), a
      00000A 4B                      91 	ld	c, e
      00000B 42                      92 	ld	b, d
      00000C 03                      93 	inc	bc
      00000D 7E                      94 	ld	a, (hl)
      00000E 02                      95 	ld	(bc), a
                                     96 ;main.c:42: move_sprite(f->sprites[0], x, y);
      00000F 7E                      97 	ld	a, (hl)
      000010 F8 00                   98 	ldhl	sp,	#0
      000012 77                      99 	ld	(hl), a
      000013 F8 06                  100 	ldhl	sp,	#6
      000015 7E                     101 	ld	a, (hl)
      000016 F8 01                  102 	ldhl	sp,	#1
      000018 77                     103 	ld	(hl), a
      000019 6B                     104 	ld	l, e
                                    105 ;	spillPairReg hl
                                    106 ;	spillPairReg hl
      00001A 62                     107 	ld	h, d
                                    108 ;	spillPairReg hl
                                    109 ;	spillPairReg hl
      00001B 23                     110 	inc	hl
      00001C 23                     111 	inc	hl
                                    112 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      00001D 6E                     113 	ld	l, (hl)
                                    114 ;	spillPairReg hl
                                    115 ;	spillPairReg hl
      00001E 26 00                  116 	ld	h, #0x00
                                    117 ;	spillPairReg hl
                                    118 ;	spillPairReg hl
      000020 29                     119 	add	hl, hl
      000021 29                     120 	add	hl, hl
      000022 01r00r00               121 	ld	bc, #_shadow_OAM
      000025 09                     122 	add	hl, bc
      000026 4D                     123 	ld	c, l
      000027 44                     124 	ld	b, h
                                    125 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      000028 F8 00                  126 	ldhl	sp,	#0
      00002A 2A                     127 	ld	a, (hl+)
      00002B 02                     128 	ld	(bc), a
      00002C 03                     129 	inc	bc
      00002D 7E                     130 	ld	a, (hl)
      00002E 02                     131 	ld	(bc), a
                                    132 ;main.c:43: move_sprite(f->sprites[1], x-spriteSize, y);
                                    133 ;setupPair	HL
      00002F 21rA1r00               134 	ld	hl, #_spriteSize
      000032 4E                     135 	ld	c, (hl)
      000033 F8 01                  136 	ldhl	sp,	#1
      000035 7E                     137 	ld	a, (hl)
      000036 91                     138 	sub	a, c
      000037 4F                     139 	ld	c, a
      000038 13                     140 	inc	de
      000039 13                     141 	inc	de
      00003A 13                     142 	inc	de
      00003B 1A                     143 	ld	a, (de)
                                    144 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      00003C 6F                     145 	ld	l, a
      00003D 11r00r00               146 	ld	de, #_shadow_OAM+0
                                    147 ;	spillPairReg hl
                                    148 ;	spillPairReg hl
      000040 26 00                  149 	ld	h, #0x00
                                    150 ;	spillPairReg hl
                                    151 ;	spillPairReg hl
      000042 29                     152 	add	hl, hl
      000043 29                     153 	add	hl, hl
      000044 19                     154 	add	hl, de
      000045 5D                     155 	ld	e, l
      000046 54                     156 	ld	d, h
                                    157 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      000047 F8 00                  158 	ldhl	sp,	#0
      000049 7E                     159 	ld	a, (hl)
      00004A 12                     160 	ld	(de), a
      00004B 13                     161 	inc	de
      00004C 79                     162 	ld	a, c
      00004D 12                     163 	ld	(de), a
                                    164 ;main.c:43: move_sprite(f->sprites[1], x-spriteSize, y);
                                    165 ;main.c:44: }
      00004E 33                     166 	inc	sp
      00004F 33                     167 	inc	sp
      000050 C9                     168 	ret
      000051                        169 _FISH:
      000051 00                     170 	.db #0x00	; 0
      000052 F0                     171 	.db #0xf0	; 240
      000053 F0                     172 	.db #0xf0	; 240
      000054 0C                     173 	.db #0x0c	; 12
      000055 FC                     174 	.db #0xfc	; 252
      000056 02                     175 	.db #0x02	; 2
      000057 FE                     176 	.db #0xfe	; 254
      000058 05                     177 	.db #0x05	; 5
      000059 FE                     178 	.db #0xfe	; 254
      00005A 01                     179 	.db #0x01	; 1
      00005B FC                     180 	.db #0xfc	; 252
      00005C 02                     181 	.db #0x02	; 2
      00005D F0                     182 	.db #0xf0	; 240
      00005E 0C                     183 	.db #0x0c	; 12
      00005F 00                     184 	.db #0x00	; 0
      000060 F0                     185 	.db #0xf0	; 240
      000061 00                     186 	.db #0x00	; 0
      000062 08                     187 	.db #0x08	; 8
      000063 08                     188 	.db #0x08	; 8
      000064 15                     189 	.db #0x15	; 21
      000065 1D                     190 	.db #0x1d	; 29
      000066 22                     191 	.db #0x22	; 34
      000067 1F                     192 	.db #0x1f	; 31
      000068 20                     193 	.db #0x20	; 32
      000069 1F                     194 	.db #0x1f	; 31
      00006A 20                     195 	.db #0x20	; 32
      00006B 1D                     196 	.db #0x1d	; 29
      00006C 22                     197 	.db #0x22	; 34
      00006D 08                     198 	.db #0x08	; 8
      00006E 15                     199 	.db #0x15	; 21
      00006F 00                     200 	.db #0x00	; 0
      000070 08                     201 	.db #0x08	; 8
      000071                        202 _ROD:
      000071 00                     203 	.db #0x00	; 0
      000072 08                     204 	.db #0x08	; 8
      000073 00                     205 	.db #0x00	; 0
      000074 08                     206 	.db #0x08	; 8
      000075 00                     207 	.db #0x00	; 0
      000076 04                     208 	.db #0x04	; 4
      000077 00                     209 	.db #0x00	; 0
      000078 02                     210 	.db #0x02	; 2
      000079 00                     211 	.db #0x00	; 0
      00007A 02                     212 	.db #0x02	; 2
      00007B 00                     213 	.db #0x00	; 0
      00007C 02                     214 	.db #0x02	; 2
      00007D 00                     215 	.db #0x00	; 0
      00007E 24                     216 	.db #0x24	; 36
      00007F 00                     217 	.db #0x00	; 0
      000080 18                     218 	.db #0x18	; 24
      000081 18                     219 	.db #0x18	; 24
      000082 00                     220 	.db #0x00	; 0
      000083 1C                     221 	.db #0x1c	; 28
      000084 08                     222 	.db #0x08	; 8
      000085 1E                     223 	.db #0x1e	; 30
      000086 00                     224 	.db #0x00	; 0
      000087 07                     225 	.db #0x07	; 7
      000088 00                     226 	.db #0x00	; 0
      000089 43                     227 	.db #0x43	; 67	'C'
      00008A 00                     228 	.db #0x00	; 0
      00008B E7                     229 	.db #0xe7	; 231
      00008C 00                     230 	.db #0x00	; 0
      00008D 7E                     231 	.db #0x7e	; 126
      00008E 00                     232 	.db #0x00	; 0
      00008F 3C                     233 	.db #0x3c	; 60
      000090 00                     234 	.db #0x00	; 0
      000091                        235 _CAN:
      000091 00                     236 	.db #0x00	; 0
      000092 01                     237 	.db #0x01	; 1
      000093 00                     238 	.db #0x00	; 0
      000094 02                     239 	.db #0x02	; 2
      000095 00                     240 	.db #0x00	; 0
      000096 12                     241 	.db #0x12	; 18
      000097 10                     242 	.db #0x10	; 16
      000098 2A                     243 	.db #0x2a	; 42
      000099 38                     244 	.db #0x38	; 56	'8'
      00009A 44                     245 	.db #0x44	; 68	'D'
      00009B 70                     246 	.db #0x70	; 112	'p'
      00009C 88                     247 	.db #0x88	; 136
      00009D 20                     248 	.db #0x20	; 32
      00009E 50                     249 	.db #0x50	; 80	'P'
      00009F 00                     250 	.db #0x00	; 0
      0000A0 20                     251 	.db #0x20	; 32
      0000A1                        252 _spriteSize:
      0000A1 08                     253 	.db #0x08	; 8
                                    254 ;main.c:46: void init() {
                                    255 ;	---------------------------------
                                    256 ; Function init
                                    257 ; ---------------------------------
      0000A2                        258 _init::
                                    259 ;main.c:48: fish1.sprites[0] = 1;
      0000A2 01r02r00               260 	ld	bc, #_fish1 + 2
      0000A5 3E 01                  261 	ld	a, #0x01
      0000A7 02                     262 	ld	(bc), a
                                    263 ;main.c:49: fish1.sprites[1] = 2;
      0000A8 21r03r00               264 	ld	hl, #(_fish1 + 3)
      0000AB 36 02                  265 	ld	(hl), #0x02
                                    266 ;main.c:50: set_sprite_data(1, 2, FISH);
      0000AD 11r51r00               267 	ld	de, #_FISH
      0000B0 D5                     268 	push	de
      0000B1 21 01 02               269 	ld	hl, #0x201
      0000B4 E5                     270 	push	hl
      0000B5 CDr00r00               271 	call	_set_sprite_data
      0000B8 E8 04                  272 	add	sp, #4
                                    273 ;main.c:51: set_sprite_tile(fish1.sprites[0], 1);
      0000BA 0A                     274 	ld	a, (bc)
      0000BB 4F                     275 	ld	c, a
                                    276 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      0000BC 26 00                  277 	ld	h, #0x00
                                    278 ;	spillPairReg hl
                                    279 ;	spillPairReg hl
      0000BE 69                     280 	ld	l, c
      0000BF 29                     281 	add	hl, hl
      0000C0 29                     282 	add	hl, hl
      0000C1 11r00r00               283 	ld	de, #_shadow_OAM
      0000C4 19                     284 	add	hl, de
      0000C5 23                     285 	inc	hl
      0000C6 23                     286 	inc	hl
      0000C7 36 01                  287 	ld	(hl), #0x01
                                    288 ;main.c:52: set_sprite_tile(fish1.sprites[1], 2);
      0000C9 21r03r00               289 	ld	hl, #(_fish1 + 3)
      0000CC 4E                     290 	ld	c, (hl)
                                    291 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      0000CD 26 00                  292 	ld	h, #0x00
                                    293 ;	spillPairReg hl
                                    294 ;	spillPairReg hl
      0000CF 69                     295 	ld	l, c
      0000D0 29                     296 	add	hl, hl
      0000D1 29                     297 	add	hl, hl
      0000D2 11r00r00               298 	ld	de, #_shadow_OAM
      0000D5 19                     299 	add	hl, de
      0000D6 23                     300 	inc	hl
      0000D7 23                     301 	inc	hl
      0000D8 36 02                  302 	ld	(hl), #0x02
                                    303 ;main.c:54: fishingRod.yHook = 100;
      0000DA 21r04r00               304 	ld	hl, #_fishingRod
      0000DD 36 64                  305 	ld	(hl), #0x64
                                    306 ;main.c:55: fishingRod.hookSprite = 3;
      0000DF 01r05r00               307 	ld	bc, #_fishingRod + 1
      0000E2 3E 03                  308 	ld	a, #0x03
      0000E4 02                     309 	ld	(bc), a
                                    310 ;main.c:56: fishingRod.hookSpriteFish = 4;
      0000E5 21r06r00               311 	ld	hl, #(_fishingRod + 2)
      0000E8 36 04                  312 	ld	(hl), #0x04
                                    313 ;main.c:57: fishingRod.spriteTile = 3;
      0000EA 21r07r00               314 	ld	hl, #(_fishingRod + 3)
      0000ED 36 03                  315 	ld	(hl), #0x03
                                    316 ;main.c:58: set_sprite_data(3, 4, ROD);
      0000EF 11r71r00               317 	ld	de, #_ROD
      0000F2 D5                     318 	push	de
      0000F3 21 03 04               319 	ld	hl, #0x403
      0000F6 E5                     320 	push	hl
      0000F7 CDr00r00               321 	call	_set_sprite_data
      0000FA E8 04                  322 	add	sp, #4
                                    323 ;main.c:59: set_sprite_tile(fishingRod.spriteTile, fishingRod.hookSprite);
      0000FC 0A                     324 	ld	a, (bc)
      0000FD 4F                     325 	ld	c, a
      0000FE 21r07r00               326 	ld	hl, #(_fishingRod + 3)
                                    327 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      000101 6E                     328 	ld	l, (hl)
                                    329 ;	spillPairReg hl
                                    330 ;	spillPairReg hl
      000102 26 00                  331 	ld	h, #0x00
                                    332 ;	spillPairReg hl
                                    333 ;	spillPairReg hl
      000104 29                     334 	add	hl, hl
      000105 29                     335 	add	hl, hl
      000106 11r00r00               336 	ld	de, #_shadow_OAM
      000109 19                     337 	add	hl, de
      00010A 23                     338 	inc	hl
      00010B 23                     339 	inc	hl
      00010C 71                     340 	ld	(hl), c
                                    341 ;main.c:60: set_sprite_data(5, 5, CAN);
      00010D 11r91r00               342 	ld	de, #_CAN
      000110 D5                     343 	push	de
      000111 21 05 05               344 	ld	hl, #0x505
      000114 E5                     345 	push	hl
      000115 CDr00r00               346 	call	_set_sprite_data
      000118 E8 04                  347 	add	sp, #4
                                    348 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      00011A 21r16r00               349 	ld	hl, #(_shadow_OAM + 22)
      00011D 36 05                  350 	ld	(hl), #0x05
                                    351 ;main.c:63: DISPLAY_ON;
      00011F F0r00                  352 	ldh	a, (_LCDC_REG + 0)
      000121 F6 80                  353 	or	a, #0x80
      000123 E0r00                  354 	ldh	(_LCDC_REG + 0), a
                                    355 ;main.c:64: SHOW_SPRITES;
      000125 F0r00                  356 	ldh	a, (_LCDC_REG + 0)
      000127 F6 02                  357 	or	a, #0x02
      000129 E0r00                  358 	ldh	(_LCDC_REG + 0), a
                                    359 ;main.c:65: }
      00012B C9                     360 	ret
                                    361 ;main.c:67: UINT8 randomRange(UINT8 start, UINT8 end) {
                                    362 ;	---------------------------------
                                    363 ; Function randomRange
                                    364 ; ---------------------------------
      00012C                        365 _randomRange::
                                    366 ;main.c:68: return start + ((UINT8)rand()) % (end - start + (UINT8)1);
      00012C CDr00r00               367 	call	_rand
      00012F F8 03                  368 	ldhl	sp,	#3
      000131 3A                     369 	ld	a, (hl-)
      000132 16 00                  370 	ld	d, #0x00
      000134 4E                     371 	ld	c, (hl)
      000135 06 00                  372 	ld	b, #0x00
      000137 91                     373 	sub	a, c
      000138 4F                     374 	ld	c, a
      000139 7A                     375 	ld	a, d
      00013A 98                     376 	sbc	a, b
      00013B 47                     377 	ld	b, a
      00013C 03                     378 	inc	bc
      00013D 16 00                  379 	ld	d, #0x00
      00013F C5                     380 	push	bc
      000140 D5                     381 	push	de
      000141 CDr00r00               382 	call	__modsint
      000144 E8 04                  383 	add	sp, #4
      000146 F8 02                  384 	ldhl	sp,	#2
      000148 7E                     385 	ld	a, (hl)
      000149 83                     386 	add	a, e
      00014A 5F                     387 	ld	e, a
                                    388 ;main.c:69: }
      00014B C9                     389 	ret
                                    390 ;main.c:71: char collideWith() {
                                    391 ;	---------------------------------
                                    392 ; Function collideWith
                                    393 ; ---------------------------------
      00014C                        394 _collideWith::
                                    395 ;main.c:78: return '';
                                    396 ;main.c:79: }
      00014C C9                     397 	ret
                                    398 ;main.c:81: void onCatchFish(){
                                    399 ;	---------------------------------
                                    400 ; Function onCatchFish
                                    401 ; ---------------------------------
      00014D                        402 _onCatchFish::
                                    403 ;main.c:82: set_sprite_tile(fishingRod.spriteTile, fishingRod.hookSpriteFish);
      00014D 21r06r00               404 	ld	hl, #_fishingRod + 2
      000150 4E                     405 	ld	c, (hl)
      000151 21r07r00               406 	ld	hl, #_fishingRod + 3
                                    407 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      000154 6E                     408 	ld	l, (hl)
      000155 11r00r00               409 	ld	de, #_shadow_OAM+0
                                    410 ;	spillPairReg hl
                                    411 ;	spillPairReg hl
      000158 26 00                  412 	ld	h, #0x00
                                    413 ;	spillPairReg hl
                                    414 ;	spillPairReg hl
      00015A 29                     415 	add	hl, hl
      00015B 29                     416 	add	hl, hl
      00015C 19                     417 	add	hl, de
      00015D 23                     418 	inc	hl
      00015E 23                     419 	inc	hl
      00015F 71                     420 	ld	(hl), c
                                    421 ;main.c:82: set_sprite_tile(fishingRod.spriteTile, fishingRod.hookSpriteFish);
                                    422 ;main.c:83: }
      000160 C9                     423 	ret
                                    424 ;main.c:85: void storeFish(){
                                    425 ;	---------------------------------
                                    426 ; Function storeFish
                                    427 ; ---------------------------------
      000161                        428 _storeFish::
                                    429 ;main.c:87: if(fishingRod.spriteTile == fishingRod.hookSpriteFish) {
      000161 21r07r00               430 	ld	hl, #_fishingRod + 3
      000164 4E                     431 	ld	c, (hl)
      000165 FAr06r00               432 	ld	a, (#(_fishingRod + 2) + 0)
      000168 91                     433 	sub	a, c
      000169 C0                     434 	ret	NZ
                                    435 ;main.c:88: set_sprite_tile(fishingRod.spriteTile, fishingRod.hookSprite);
      00016A 21r05r00               436 	ld	hl, #_fishingRod + 1
      00016D 5E                     437 	ld	e, (hl)
                                    438 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      00016E 69                     439 	ld	l, c
                                    440 ;	spillPairReg hl
                                    441 ;	spillPairReg hl
      00016F 26 00                  442 	ld	h, #0x00
                                    443 ;	spillPairReg hl
                                    444 ;	spillPairReg hl
      000171 29                     445 	add	hl, hl
      000172 29                     446 	add	hl, hl
      000173 01r00r00               447 	ld	bc, #_shadow_OAM
      000176 09                     448 	add	hl, bc
      000177 23                     449 	inc	hl
      000178 23                     450 	inc	hl
      000179 73                     451 	ld	(hl), e
                                    452 ;main.c:88: set_sprite_tile(fishingRod.spriteTile, fishingRod.hookSprite);
                                    453 ;main.c:90: }
      00017A C9                     454 	ret
                                    455 ;main.c:92: void handleInput(){
                                    456 ;	---------------------------------
                                    457 ; Function handleInput
                                    458 ; ---------------------------------
      00017B                        459 _handleInput::
                                    460 ;main.c:93: switch(joypad()) {
      00017B CDr00r00               461 	call	_joypad
      00017E 7B                     462 	ld	a, e
      00017F FE 04                  463 	cp	a, #0x04
      000181 28 13                  464 	jr	Z, 00104$
      000183 FE 08                  465 	cp	a, #0x08
      000185 28 40                  466 	jr	Z, 00107$
      000187 D6 10                  467 	sub	a, #0x10
      000189 C0                     468 	ret	NZ
                                    469 ;main.c:96: if(fishingRod.yHook<=30) {
      00018A 21r04r00               470 	ld	hl, #_fishingRod
      00018D 4E                     471 	ld	c, (hl)
      00018E 3E 1E                  472 	ld	a, #0x1e
      000190 91                     473 	sub	a, c
      000191 38 03                  474 	jr	C, 00104$
                                    475 ;main.c:97: storeFish();
      000193 CDr61r01               476 	call	_storeFish
                                    477 ;main.c:100: case J_UP:
      000196                        478 00104$:
                                    479 ;main.c:101: if(fishingRod.yHook > 20) {
      000196 01r04r00               480 	ld	bc, #_fishingRod+0
      000199 0A                     481 	ld	a, (bc)
      00019A 5F                     482 	ld	e, a
      00019B 3E 14                  483 	ld	a, #0x14
      00019D 93                     484 	sub	a, e
      00019E D0                     485 	ret	NC
                                    486 ;main.c:102: fishingRod.yHook -= 1;
      00019F 7B                     487 	ld	a, e
      0001A0 3D                     488 	dec	a
      0001A1 02                     489 	ld	(bc), a
                                    490 ;main.c:104: color(WHITE, WHITE, SOLID);
      0001A2 C5                     491 	push	bc
      0001A3 AF                     492 	xor	a, a
      0001A4 0F                     493 	rrca
      0001A5 F5                     494 	push	af
      0001A6 AF                     495 	xor	a, a
      0001A7 F5                     496 	push	af
      0001A8 33                     497 	inc	sp
      0001A9 CDr00r00               498 	call	_color
      0001AC E8 03                  499 	add	sp, #3
      0001AE C1                     500 	pop	bc
                                    501 ;main.c:101: if(fishingRod.yHook > 20) {
      0001AF 0A                     502 	ld	a, (bc)
                                    503 ;main.c:105: line(80, fishingRod.yHook - 16, 80, fishingRod.yHook - 14);
      0001B0 4F                     504 	ld	c, a
      0001B1 C6 F2                  505 	add	a, #0xf2
      0001B3 47                     506 	ld	b, a
      0001B4 79                     507 	ld	a, c
      0001B5 C6 F0                  508 	add	a, #0xf0
      0001B7 C5                     509 	push	bc
      0001B8 33                     510 	inc	sp
      0001B9 26 50                  511 	ld	h, #0x50
                                    512 ;	spillPairReg hl
                                    513 ;	spillPairReg hl
      0001BB E5                     514 	push	hl
      0001BC 33                     515 	inc	sp
      0001BD 67                     516 	ld	h, a
      0001BE 2E 50                  517 	ld	l, #0x50
      0001C0 E5                     518 	push	hl
      0001C1 CDr00r00               519 	call	_line
      0001C4 E8 04                  520 	add	sp, #4
                                    521 ;main.c:107: break;
      0001C6 C9                     522 	ret
                                    523 ;main.c:109: case J_DOWN:
      0001C7                        524 00107$:
                                    525 ;main.c:110: if(fishingRod.yHook<152) {
      0001C7 01r04r00               526 	ld	bc, #_fishingRod+0
      0001CA 0A                     527 	ld	a, (bc)
      0001CB FE 98                  528 	cp	a, #0x98
      0001CD D0                     529 	ret	NC
                                    530 ;main.c:111: fishingRod.yHook += 1;
      0001CE 3C                     531 	inc	a
      0001CF 02                     532 	ld	(bc), a
                                    533 ;main.c:112: color(BLACK, BLACK, SOLID);
      0001D0 C5                     534 	push	bc
      0001D1 AF                     535 	xor	a, a
      0001D2 67                     536 	ld	h, a
      0001D3 2E 03                  537 	ld	l, #0x03
      0001D5 E5                     538 	push	hl
      0001D6 3E 03                  539 	ld	a, #0x03
      0001D8 F5                     540 	push	af
      0001D9 33                     541 	inc	sp
      0001DA CDr00r00               542 	call	_color
      0001DD E8 03                  543 	add	sp, #3
      0001DF C1                     544 	pop	bc
                                    545 ;main.c:110: if(fishingRod.yHook<152) {
      0001E0 0A                     546 	ld	a, (bc)
                                    547 ;main.c:113: line(80, fishingRod.yHook - 16, 80, fishingRod.yHook - 17);
      0001E1 4F                     548 	ld	c, a
      0001E2 C6 EF                  549 	add	a, #0xef
      0001E4 47                     550 	ld	b, a
      0001E5 79                     551 	ld	a, c
      0001E6 C6 F0                  552 	add	a, #0xf0
      0001E8 C5                     553 	push	bc
      0001E9 33                     554 	inc	sp
      0001EA 26 50                  555 	ld	h, #0x50
                                    556 ;	spillPairReg hl
                                    557 ;	spillPairReg hl
      0001EC E5                     558 	push	hl
      0001ED 33                     559 	inc	sp
      0001EE 67                     560 	ld	h, a
      0001EF 2E 50                  561 	ld	l, #0x50
      0001F1 E5                     562 	push	hl
      0001F2 CDr00r00               563 	call	_line
      0001F5 E8 04                  564 	add	sp, #4
                                    565 ;main.c:116: }
                                    566 ;main.c:117: }
      0001F7 C9                     567 	ret
                                    568 ;main.c:119: void main() {
                                    569 ;	---------------------------------
                                    570 ; Function main
                                    571 ; ---------------------------------
      0001F8                        572 _main::
                                    573 ;main.c:120: init();
      0001F8 CDrA2r00               574 	call	_init
                                    575 ;main.c:122: printf(" \n\n\n\n\n\n\n\n    PRESS START!\n");
      0001FB 11rC9r02               576 	ld	de, #___str_1
      0001FE D5                     577 	push	de
      0001FF CDr00r00               578 	call	_puts
      000202 E1                     579 	pop	hl
                                    580 ;main.c:123: waitpad(J_START);
      000203 3E 80                  581 	ld	a, #0x80
      000205 F5                     582 	push	af
      000206 33                     583 	inc	sp
      000207 CDr00r00               584 	call	_waitpad
      00020A 33                     585 	inc	sp
                                    586 ;main.c:124: seed = LY_REG;
      00020B F0r00                  587 	ldh	a, (_LY_REG + 0)
                                    588 ;setupPair	HL
      00020D 21r08r00               589 	ld	hl, #_seed
                                    590 ;setupPair	HL
      000210 22                     591 	ld	(hl+), a
                                    592 ;main.c:125: seed |= (UINT16)DIV_REG << 8;
                                    593 ;setupPair	HL
      000211 AF                     594 	xor	a, a
      000212 32                     595 	ld	(hl-), a
      000213 F0r00                  596 	ldh	a, (_DIV_REG + 0)
      000215 4F                     597 	ld	c, a
      000216 AF                     598 	xor	a, a
      000217 B6                     599 	or	a, (hl)
                                    600 ;setupPair	HL
                                    601 ;setupPair	HL
      000218 22                     602 	ld	(hl+), a
      000219 79                     603 	ld	a, c
      00021A B6                     604 	or	a, (hl)
                                    605 ;setupPair	HL
                                    606 ;main.c:126: initrand(seed);
                                    607 ;setupPair	HL
      00021B 32                     608 	ld	(hl-), a
                                    609 ;setupPair	HL
      00021C 2A                     610 	ld	a, (hl+)
      00021D 4F                     611 	ld	c, a
      00021E 46                     612 	ld	b, (hl)
      00021F C5                     613 	push	bc
      000220 CDr00r00               614 	call	_initrand
      000223 E1                     615 	pop	hl
                                    616 ;main.c:128: printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
      000224 11rE3r02               617 	ld	de, #___str_3
      000227 D5                     618 	push	de
      000228 CDr00r00               619 	call	_puts
      00022B E1                     620 	pop	hl
                                    621 ;main.c:130: line(80, 0, 80, fishingRod.yHook - 16);
      00022C FAr04r00               622 	ld	a, (#_fishingRod + 0)
      00022F C6 F0                  623 	add	a, #0xf0
      000231 67                     624 	ld	h, a
      000232 2E 50                  625 	ld	l, #0x50
      000234 E5                     626 	push	hl
      000235 21 50 00               627 	ld	hl, #0x50
      000238 E5                     628 	push	hl
      000239 CDr00r00               629 	call	_line
      00023C E8 04                  630 	add	sp, #4
                                    631 ;main.c:132: color(LTGREY, LTGREY, SOLID);
      00023E AF                     632 	xor	a, a
      00023F 67                     633 	ld	h, a
      000240 2E 01                  634 	ld	l, #0x01
      000242 E5                     635 	push	hl
      000243 3E 01                  636 	ld	a, #0x01
      000245 F5                     637 	push	af
      000246 33                     638 	inc	sp
      000247 CDr00r00               639 	call	_color
      00024A E8 03                  640 	add	sp, #3
                                    641 ;main.c:133: line(0, 20, 70, 20);
      00024C 21 46 14               642 	ld	hl, #0x1446
      00024F E5                     643 	push	hl
      000250 21 00 14               644 	ld	hl, #0x1400
      000253 E5                     645 	push	hl
      000254 CDr00r00               646 	call	_line
      000257 E8 04                  647 	add	sp, #4
                                    648 ;main.c:134: line(90, 20, 159, 20);
      000259 21 9F 14               649 	ld	hl, #0x149f
      00025C E5                     650 	push	hl
      00025D 21 5A 14               651 	ld	hl, #0x145a
      000260 E5                     652 	push	hl
      000261 CDr00r00               653 	call	_line
      000264 E8 04                  654 	add	sp, #4
                                    655 ;main.c:136: moveFishTo(&fish1, 40, 40);
      000266 21 28 28               656 	ld	hl, #0x2828
      000269 E5                     657 	push	hl
      00026A 11r00r00               658 	ld	de, #_fish1
      00026D D5                     659 	push	de
      00026E CDr00r00               660 	call	_moveFishTo
      000271 E8 04                  661 	add	sp, #4
                                    662 ;main.c:138: while(1) {
      000273                        663 00104$:
                                    664 ;main.c:139: wait_vbl_done();
      000273 CDr00r00               665 	call	_wait_vbl_done
                                    666 ;main.c:140: moveFishTo(&fish1, fish1.x + 1, fish1.y);
      000276 21r01r00               667 	ld	hl, #(_fish1 + 1)
      000279 46                     668 	ld	b, (hl)
      00027A FAr00r00               669 	ld	a, (#_fish1 + 0)
      00027D 3C                     670 	inc	a
      00027E C5                     671 	push	bc
      00027F 33                     672 	inc	sp
      000280 F5                     673 	push	af
      000281 33                     674 	inc	sp
      000282 11r00r00               675 	ld	de, #_fish1
      000285 D5                     676 	push	de
      000286 CDr00r00               677 	call	_moveFishTo
      000289 E8 04                  678 	add	sp, #4
                                    679 ;main.c:141: handleInput();
      00028B CDr7Br01               680 	call	_handleInput
                                    681 ;main.c:142: move_sprite(fishingRod.spriteTile, 84, fishingRod.yHook);
      00028E 21r04r00               682 	ld	hl, #_fishingRod
      000291 4E                     683 	ld	c, (hl)
      000292 21r07r00               684 	ld	hl, #(_fishingRod + 3)
                                    685 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      000295 6E                     686 	ld	l, (hl)
      000296 11r00r00               687 	ld	de, #_shadow_OAM+0
                                    688 ;	spillPairReg hl
                                    689 ;	spillPairReg hl
      000299 26 00                  690 	ld	h, #0x00
                                    691 ;	spillPairReg hl
                                    692 ;	spillPairReg hl
      00029B 29                     693 	add	hl, hl
      00029C 29                     694 	add	hl, hl
      00029D 19                     695 	add	hl, de
                                    696 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      00029E 79                     697 	ld	a, c
      00029F 22                     698 	ld	(hl+), a
      0002A0 36 54                  699 	ld	(hl), #0x54
                                    700 ;main.c:143: move_sprite(5, i, 100); // can
                                    701 ;setupPair	HL
      0002A2 21r00r00               702 	ld	hl, #_i
      0002A5 4E                     703 	ld	c, (hl)
                                    704 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      0002A6 21r14r00               705 	ld	hl, #(_shadow_OAM + 20)
                                    706 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      0002A9 3E 64                  707 	ld	a, #0x64
      0002AB 22                     708 	ld	(hl+), a
      0002AC 71                     709 	ld	(hl), c
                                    710 ;main.c:144: if(fish1.x > 160) {
      0002AD 21r00r00               711 	ld	hl, #_fish1
      0002B0 4E                     712 	ld	c, (hl)
      0002B1 3E A0                  713 	ld	a, #0xa0
      0002B3 91                     714 	sub	a, c
      0002B4 30 BD                  715 	jr	NC, 00104$
                                    716 ;main.c:145: fish1.y = randomRange(40, 150);
      0002B6 21 28 96               717 	ld	hl, #0x9628
      0002B9 E5                     718 	push	hl
      0002BA CDr2Cr01               719 	call	_randomRange
      0002BD E1                     720 	pop	hl
      0002BE 7B                     721 	ld	a, e
      0002BF EAr01r00               722 	ld	(#(_fish1 + 1)),a
                                    723 ;main.c:146: fish1.x = 0;
      0002C2 21r00r00               724 	ld	hl, #_fish1
      0002C5 36 00                  725 	ld	(hl), #0x00
                                    726 ;main.c:149: }
      0002C7 18 AA                  727 	jr	00104$
      0002C9                        728 ___str_1:
      0002C9 20                     729 	.ascii " "
      0002CA 0A                     730 	.db 0x0a
      0002CB 0A                     731 	.db 0x0a
      0002CC 0A                     732 	.db 0x0a
      0002CD 0A                     733 	.db 0x0a
      0002CE 0A                     734 	.db 0x0a
      0002CF 0A                     735 	.db 0x0a
      0002D0 0A                     736 	.db 0x0a
      0002D1 0A                     737 	.db 0x0a
      0002D2 20 20 20 20 50 52 45   738 	.ascii "    PRESS START!"
             53 53 20 53 54 41 52
             54 21
      0002E2 00                     739 	.db 0x00
      0002E3                        740 ___str_3:
      0002E3 0A                     741 	.db 0x0a
      0002E4 0A                     742 	.db 0x0a
      0002E5 0A                     743 	.db 0x0a
      0002E6 0A                     744 	.db 0x0a
      0002E7 0A                     745 	.db 0x0a
      0002E8 0A                     746 	.db 0x0a
      0002E9 0A                     747 	.db 0x0a
      0002EA 0A                     748 	.db 0x0a
      0002EB 0A                     749 	.db 0x0a
      0002EC 0A                     750 	.db 0x0a
      0002ED 0A                     751 	.db 0x0a
      0002EE 0A                     752 	.db 0x0a
      0002EF 0A                     753 	.db 0x0a
      0002F0 0A                     754 	.db 0x0a
      0002F1 0A                     755 	.db 0x0a
      0002F2 0A                     756 	.db 0x0a
      0002F3 0A                     757 	.db 0x0a
      0002F4 00                     758 	.db 0x00
                                    759 	.area _CODE
                                    760 	.area _INITIALIZER
      000000                        761 __xinit__i:
      000000 00                     762 	.db #0x00	; 0
                                    763 	.area _CABS (ABS)
