                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12439 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _randomRange
                                     13 	.globl _init
                                     14 	.globl _moveFishTo
                                     15 	.globl _rand
                                     16 	.globl _initrand
                                     17 	.globl _puts
                                     18 	.globl _printf
                                     19 	.globl _color
                                     20 	.globl _line
                                     21 	.globl _set_sprite_data
                                     22 	.globl _wait_vbl_done
                                     23 	.globl _waitpad
                                     24 	.globl _joypad
                                     25 	.globl _i
                                     26 	.globl _seed
                                     27 	.globl _fishingRod
                                     28 	.globl _fish1
                                     29 	.globl _spriteSize
                                     30 	.globl _CAN
                                     31 	.globl _ROD
                                     32 	.globl _FISH
                                     33 ;--------------------------------------------------------
                                     34 ; special function registers
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _DATA
      000000                         40 _fish1::
      000000                         41 	.ds 4
      000004                         42 _fishingRod::
      000004                         43 	.ds 2
      000006                         44 _seed::
      000006                         45 	.ds 2
                                     46 ;--------------------------------------------------------
                                     47 ; ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area _INITIALIZED
      000000                         50 _i::
      000000                         51 	.ds 1
                                     52 ;--------------------------------------------------------
                                     53 ; absolute external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area _DABS (ABS)
                                     56 ;--------------------------------------------------------
                                     57 ; global & static initialisations
                                     58 ;--------------------------------------------------------
                                     59 	.area _HOME
                                     60 	.area _GSINIT
                                     61 	.area _GSFINAL
                                     62 	.area _GSINIT
                                     63 ;--------------------------------------------------------
                                     64 ; Home
                                     65 ;--------------------------------------------------------
                                     66 	.area _HOME
                                     67 	.area _HOME
                                     68 ;--------------------------------------------------------
                                     69 ; code
                                     70 ;--------------------------------------------------------
                                     71 	.area _CODE
                                     72 ;main.c:37: void moveFishTo(Fish *f, UINT8 x, UINT8 y) {
                                     73 ;	---------------------------------
                                     74 ; Function moveFishTo
                                     75 ; ---------------------------------
      000000                         76 _moveFishTo::
      000000 3B                      77 	dec	sp
      000001 3B                      78 	dec	sp
                                     79 ;main.c:38: f->x = x;
      000002 F8 04                   80 	ldhl	sp,	#4
      000004 2A                      81 	ld	a, (hl+)
      000005 5F                      82 	ld	e, a
      000006 2A                      83 	ld	a, (hl+)
      000007 57                      84 	ld	d, a
                                     85 ;main.c:39: f->y = y;
      000008 2A                      86 	ld	a, (hl+)
      000009 12                      87 	ld	(de), a
      00000A 4B                      88 	ld	c, e
      00000B 42                      89 	ld	b, d
      00000C 03                      90 	inc	bc
      00000D 7E                      91 	ld	a, (hl)
      00000E 02                      92 	ld	(bc), a
                                     93 ;main.c:40: move_sprite(f->sprites[0], x, y);
      00000F 7E                      94 	ld	a, (hl)
      000010 F8 00                   95 	ldhl	sp,	#0
      000012 77                      96 	ld	(hl), a
      000013 F8 06                   97 	ldhl	sp,	#6
      000015 7E                      98 	ld	a, (hl)
      000016 F8 01                   99 	ldhl	sp,	#1
      000018 77                     100 	ld	(hl), a
      000019 6B                     101 	ld	l, e
                                    102 ;	spillPairReg hl
                                    103 ;	spillPairReg hl
      00001A 62                     104 	ld	h, d
                                    105 ;	spillPairReg hl
                                    106 ;	spillPairReg hl
      00001B 23                     107 	inc	hl
      00001C 23                     108 	inc	hl
                                    109 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      00001D 6E                     110 	ld	l, (hl)
                                    111 ;	spillPairReg hl
                                    112 ;	spillPairReg hl
      00001E 26 00                  113 	ld	h, #0x00
                                    114 ;	spillPairReg hl
                                    115 ;	spillPairReg hl
      000020 29                     116 	add	hl, hl
      000021 29                     117 	add	hl, hl
      000022 01r00r00               118 	ld	bc, #_shadow_OAM
      000025 09                     119 	add	hl, bc
      000026 4D                     120 	ld	c, l
      000027 44                     121 	ld	b, h
                                    122 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      000028 F8 00                  123 	ldhl	sp,	#0
      00002A 2A                     124 	ld	a, (hl+)
      00002B 02                     125 	ld	(bc), a
      00002C 03                     126 	inc	bc
      00002D 7E                     127 	ld	a, (hl)
      00002E 02                     128 	ld	(bc), a
                                    129 ;main.c:41: move_sprite(f->sprites[1], x-spriteSize, y);
                                    130 ;setupPair	HL
      00002F 21r91r00               131 	ld	hl, #_spriteSize
      000032 4E                     132 	ld	c, (hl)
      000033 F8 01                  133 	ldhl	sp,	#1
      000035 7E                     134 	ld	a, (hl)
      000036 91                     135 	sub	a, c
      000037 4F                     136 	ld	c, a
      000038 13                     137 	inc	de
      000039 13                     138 	inc	de
      00003A 13                     139 	inc	de
      00003B 1A                     140 	ld	a, (de)
                                    141 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      00003C 6F                     142 	ld	l, a
      00003D 11r00r00               143 	ld	de, #_shadow_OAM+0
                                    144 ;	spillPairReg hl
                                    145 ;	spillPairReg hl
      000040 26 00                  146 	ld	h, #0x00
                                    147 ;	spillPairReg hl
                                    148 ;	spillPairReg hl
      000042 29                     149 	add	hl, hl
      000043 29                     150 	add	hl, hl
      000044 19                     151 	add	hl, de
      000045 5D                     152 	ld	e, l
      000046 54                     153 	ld	d, h
                                    154 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      000047 F8 00                  155 	ldhl	sp,	#0
      000049 7E                     156 	ld	a, (hl)
      00004A 12                     157 	ld	(de), a
      00004B 13                     158 	inc	de
      00004C 79                     159 	ld	a, c
      00004D 12                     160 	ld	(de), a
                                    161 ;main.c:41: move_sprite(f->sprites[1], x-spriteSize, y);
                                    162 ;main.c:42: }
      00004E 33                     163 	inc	sp
      00004F 33                     164 	inc	sp
      000050 C9                     165 	ret
      000051                        166 _FISH:
      000051 00                     167 	.db #0x00	; 0
      000052 F0                     168 	.db #0xf0	; 240
      000053 F0                     169 	.db #0xf0	; 240
      000054 0C                     170 	.db #0x0c	; 12
      000055 FC                     171 	.db #0xfc	; 252
      000056 02                     172 	.db #0x02	; 2
      000057 FE                     173 	.db #0xfe	; 254
      000058 05                     174 	.db #0x05	; 5
      000059 FE                     175 	.db #0xfe	; 254
      00005A 01                     176 	.db #0x01	; 1
      00005B FC                     177 	.db #0xfc	; 252
      00005C 02                     178 	.db #0x02	; 2
      00005D F0                     179 	.db #0xf0	; 240
      00005E 0C                     180 	.db #0x0c	; 12
      00005F 00                     181 	.db #0x00	; 0
      000060 F0                     182 	.db #0xf0	; 240
      000061 00                     183 	.db #0x00	; 0
      000062 08                     184 	.db #0x08	; 8
      000063 08                     185 	.db #0x08	; 8
      000064 15                     186 	.db #0x15	; 21
      000065 1D                     187 	.db #0x1d	; 29
      000066 22                     188 	.db #0x22	; 34
      000067 1F                     189 	.db #0x1f	; 31
      000068 20                     190 	.db #0x20	; 32
      000069 1F                     191 	.db #0x1f	; 31
      00006A 20                     192 	.db #0x20	; 32
      00006B 1D                     193 	.db #0x1d	; 29
      00006C 22                     194 	.db #0x22	; 34
      00006D 08                     195 	.db #0x08	; 8
      00006E 15                     196 	.db #0x15	; 21
      00006F 00                     197 	.db #0x00	; 0
      000070 08                     198 	.db #0x08	; 8
      000071                        199 _ROD:
      000071 00                     200 	.db #0x00	; 0
      000072 08                     201 	.db #0x08	; 8
      000073 00                     202 	.db #0x00	; 0
      000074 08                     203 	.db #0x08	; 8
      000075 00                     204 	.db #0x00	; 0
      000076 04                     205 	.db #0x04	; 4
      000077 00                     206 	.db #0x00	; 0
      000078 02                     207 	.db #0x02	; 2
      000079 00                     208 	.db #0x00	; 0
      00007A 02                     209 	.db #0x02	; 2
      00007B 00                     210 	.db #0x00	; 0
      00007C 02                     211 	.db #0x02	; 2
      00007D 00                     212 	.db #0x00	; 0
      00007E 24                     213 	.db #0x24	; 36
      00007F 00                     214 	.db #0x00	; 0
      000080 18                     215 	.db #0x18	; 24
      000081                        216 _CAN:
      000081 00                     217 	.db #0x00	; 0
      000082 01                     218 	.db #0x01	; 1
      000083 00                     219 	.db #0x00	; 0
      000084 02                     220 	.db #0x02	; 2
      000085 00                     221 	.db #0x00	; 0
      000086 12                     222 	.db #0x12	; 18
      000087 10                     223 	.db #0x10	; 16
      000088 2A                     224 	.db #0x2a	; 42
      000089 38                     225 	.db #0x38	; 56	'8'
      00008A 44                     226 	.db #0x44	; 68	'D'
      00008B 70                     227 	.db #0x70	; 112	'p'
      00008C 88                     228 	.db #0x88	; 136
      00008D 20                     229 	.db #0x20	; 32
      00008E 50                     230 	.db #0x50	; 80	'P'
      00008F 00                     231 	.db #0x00	; 0
      000090 20                     232 	.db #0x20	; 32
      000091                        233 _spriteSize:
      000091 08                     234 	.db #0x08	; 8
                                    235 ;main.c:44: void init() {
                                    236 ;	---------------------------------
                                    237 ; Function init
                                    238 ; ---------------------------------
      000092                        239 _init::
                                    240 ;main.c:45: fish1.sprites[0] = 1;
      000092 21r02r00               241 	ld	hl, #(_fish1 + 2)
      000095 36 01                  242 	ld	(hl), #0x01
                                    243 ;main.c:46: fish1.sprites[1] = 2;
      000097 21r03r00               244 	ld	hl, #(_fish1 + 3)
      00009A 36 02                  245 	ld	(hl), #0x02
                                    246 ;main.c:47: moveFishTo(&fish1, 20, 30);
      00009C 21 14 1E               247 	ld	hl, #0x1e14
      00009F E5                     248 	push	hl
      0000A0 11r00r00               249 	ld	de, #_fish1
      0000A3 D5                     250 	push	de
      0000A4 CDr00r00               251 	call	_moveFishTo
      0000A7 E8 04                  252 	add	sp, #4
                                    253 ;main.c:48: set_sprite_data(1, 2, FISH);
      0000A9 11r51r00               254 	ld	de, #_FISH
      0000AC D5                     255 	push	de
      0000AD 21 01 02               256 	ld	hl, #0x201
      0000B0 E5                     257 	push	hl
      0000B1 CDr00r00               258 	call	_set_sprite_data
      0000B4 E8 04                  259 	add	sp, #4
                                    260 ;main.c:49: set_sprite_tile(fish1.sprites[0], 1);
      0000B6 21r02r00               261 	ld	hl, #(_fish1 + 2)
      0000B9 4E                     262 	ld	c, (hl)
                                    263 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      0000BA 26 00                  264 	ld	h, #0x00
                                    265 ;	spillPairReg hl
                                    266 ;	spillPairReg hl
      0000BC 69                     267 	ld	l, c
      0000BD 29                     268 	add	hl, hl
      0000BE 29                     269 	add	hl, hl
      0000BF 11r00r00               270 	ld	de, #_shadow_OAM
      0000C2 19                     271 	add	hl, de
      0000C3 23                     272 	inc	hl
      0000C4 23                     273 	inc	hl
      0000C5 36 01                  274 	ld	(hl), #0x01
                                    275 ;main.c:50: set_sprite_tile(fish1.sprites[1], 2);
      0000C7 21r03r00               276 	ld	hl, #(_fish1 + 3)
      0000CA 4E                     277 	ld	c, (hl)
                                    278 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      0000CB 26 00                  279 	ld	h, #0x00
                                    280 ;	spillPairReg hl
                                    281 ;	spillPairReg hl
      0000CD 69                     282 	ld	l, c
      0000CE 29                     283 	add	hl, hl
      0000CF 29                     284 	add	hl, hl
      0000D0 11r00r00               285 	ld	de, #_shadow_OAM
      0000D3 19                     286 	add	hl, de
      0000D4 23                     287 	inc	hl
      0000D5 23                     288 	inc	hl
      0000D6 36 02                  289 	ld	(hl), #0x02
                                    290 ;main.c:51: fishingRod.yHook = 100;
      0000D8 21r04r00               291 	ld	hl, #_fishingRod
      0000DB 36 64                  292 	ld	(hl), #0x64
                                    293 ;main.c:52: fishingRod.hookSprite = 3;
      0000DD 01r05r00               294 	ld	bc, #_fishingRod+1
      0000E0 3E 03                  295 	ld	a, #0x03
      0000E2 02                     296 	ld	(bc), a
                                    297 ;main.c:53: set_sprite_data(3, 3, ROD);
      0000E3 11r71r00               298 	ld	de, #_ROD
      0000E6 D5                     299 	push	de
      0000E7 21 03 03               300 	ld	hl, #0x303
      0000EA E5                     301 	push	hl
      0000EB CDr00r00               302 	call	_set_sprite_data
      0000EE E8 04                  303 	add	sp, #4
                                    304 ;main.c:54: set_sprite_tile(fishingRod.hookSprite, 3);
      0000F0 0A                     305 	ld	a, (bc)
      0000F1 4F                     306 	ld	c, a
                                    307 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      0000F2 26 00                  308 	ld	h, #0x00
                                    309 ;	spillPairReg hl
                                    310 ;	spillPairReg hl
      0000F4 69                     311 	ld	l, c
      0000F5 29                     312 	add	hl, hl
      0000F6 29                     313 	add	hl, hl
      0000F7 11r00r00               314 	ld	de, #_shadow_OAM
      0000FA 19                     315 	add	hl, de
      0000FB 23                     316 	inc	hl
      0000FC 23                     317 	inc	hl
      0000FD 36 03                  318 	ld	(hl), #0x03
                                    319 ;main.c:55: set_sprite_data(4, 4, CAN);
      0000FF 11r81r00               320 	ld	de, #_CAN
      000102 D5                     321 	push	de
      000103 21 04 04               322 	ld	hl, #0x404
      000106 E5                     323 	push	hl
      000107 CDr00r00               324 	call	_set_sprite_data
      00010A E8 04                  325 	add	sp, #4
                                    326 ;c:/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      00010C 21r12r00               327 	ld	hl, #(_shadow_OAM + 18)
      00010F 36 04                  328 	ld	(hl), #0x04
                                    329 ;main.c:57: DISPLAY_ON;
      000111 F0r00                  330 	ldh	a, (_LCDC_REG + 0)
      000113 F6 80                  331 	or	a, #0x80
      000115 E0r00                  332 	ldh	(_LCDC_REG + 0), a
                                    333 ;main.c:58: SHOW_SPRITES;
      000117 F0r00                  334 	ldh	a, (_LCDC_REG + 0)
      000119 F6 02                  335 	or	a, #0x02
      00011B E0r00                  336 	ldh	(_LCDC_REG + 0), a
                                    337 ;main.c:59: }
      00011D C9                     338 	ret
                                    339 ;main.c:61: UINT8 randomRange(UINT8 start, UINT8 end) {
                                    340 ;	---------------------------------
                                    341 ; Function randomRange
                                    342 ; ---------------------------------
      00011E                        343 _randomRange::
                                    344 ;main.c:62: return start + ((UINT8)rand()) % (end - start + (UINT8)1);
      00011E CDr00r00               345 	call	_rand
      000121 F8 03                  346 	ldhl	sp,	#3
      000123 3A                     347 	ld	a, (hl-)
      000124 16 00                  348 	ld	d, #0x00
      000126 4E                     349 	ld	c, (hl)
      000127 06 00                  350 	ld	b, #0x00
      000129 91                     351 	sub	a, c
      00012A 4F                     352 	ld	c, a
      00012B 7A                     353 	ld	a, d
      00012C 98                     354 	sbc	a, b
      00012D 47                     355 	ld	b, a
      00012E 03                     356 	inc	bc
      00012F 16 00                  357 	ld	d, #0x00
      000131 C5                     358 	push	bc
      000132 D5                     359 	push	de
      000133 CDr00r00               360 	call	__modsint
      000136 E8 04                  361 	add	sp, #4
      000138 F8 02                  362 	ldhl	sp,	#2
      00013A 7E                     363 	ld	a, (hl)
      00013B 83                     364 	add	a, e
      00013C 5F                     365 	ld	e, a
                                    366 ;main.c:63: }
      00013D C9                     367 	ret
                                    368 ;main.c:65: void main() {
                                    369 ;	---------------------------------
                                    370 ; Function main
                                    371 ; ---------------------------------
      00013E                        372 _main::
                                    373 ;main.c:66: init();
      00013E CDr92r00               374 	call	_init
                                    375 ;main.c:68: printf("PRESS START!");
      000141 11r2Er02               376 	ld	de, #___str_0
      000144 D5                     377 	push	de
      000145 CDr00r00               378 	call	_printf
      000148 E1                     379 	pop	hl
                                    380 ;main.c:69: waitpad(J_START);
      000149 3E 80                  381 	ld	a, #0x80
      00014B F5                     382 	push	af
      00014C 33                     383 	inc	sp
      00014D CDr00r00               384 	call	_waitpad
      000150 33                     385 	inc	sp
                                    386 ;main.c:70: seed = LY_REG;
      000151 F0r00                  387 	ldh	a, (_LY_REG + 0)
                                    388 ;setupPair	HL
      000153 21r06r00               389 	ld	hl, #_seed
                                    390 ;setupPair	HL
      000156 22                     391 	ld	(hl+), a
                                    392 ;main.c:71: seed |= (UINT16)DIV_REG << 8;
                                    393 ;setupPair	HL
      000157 AF                     394 	xor	a, a
      000158 32                     395 	ld	(hl-), a
      000159 F0r00                  396 	ldh	a, (_DIV_REG + 0)
      00015B 4F                     397 	ld	c, a
      00015C AF                     398 	xor	a, a
      00015D B6                     399 	or	a, (hl)
                                    400 ;setupPair	HL
                                    401 ;setupPair	HL
      00015E 22                     402 	ld	(hl+), a
      00015F 79                     403 	ld	a, c
      000160 B6                     404 	or	a, (hl)
                                    405 ;setupPair	HL
                                    406 ;main.c:72: initrand(seed);
                                    407 ;setupPair	HL
      000161 32                     408 	ld	(hl-), a
                                    409 ;setupPair	HL
      000162 2A                     410 	ld	a, (hl+)
      000163 4F                     411 	ld	c, a
      000164 46                     412 	ld	b, (hl)
      000165 C5                     413 	push	bc
      000166 CDr00r00               414 	call	_initrand
      000169 E1                     415 	pop	hl
                                    416 ;main.c:74: printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
      00016A 11r3Br02               417 	ld	de, #___str_2
      00016D D5                     418 	push	de
      00016E CDr00r00               419 	call	_puts
      000171 E1                     420 	pop	hl
                                    421 ;main.c:76: line(80, 0, 80, fishingRod.yHook - 16);
      000172 FAr04r00               422 	ld	a, (#_fishingRod + 0)
      000175 C6 F0                  423 	add	a, #0xf0
      000177 67                     424 	ld	h, a
      000178 2E 50                  425 	ld	l, #0x50
      00017A E5                     426 	push	hl
      00017B 21 50 00               427 	ld	hl, #0x50
      00017E E5                     428 	push	hl
      00017F CDr00r00               429 	call	_line
      000182 E8 04                  430 	add	sp, #4
                                    431 ;main.c:78: while(1) {
      000184                        432 00109$:
                                    433 ;main.c:79: wait_vbl_done();
      000184 CDr00r00               434 	call	_wait_vbl_done
                                    435 ;main.c:80: moveFishTo(&fish1, fish1.x + 1, fish1.y);
      000187 01r00r00               436 	ld	bc, #_fish1+0
      00018A 69                     437 	ld	l, c
                                    438 ;	spillPairReg hl
                                    439 ;	spillPairReg hl
      00018B 60                     440 	ld	h, b
                                    441 ;	spillPairReg hl
                                    442 ;	spillPairReg hl
      00018C 23                     443 	inc	hl
      00018D 5E                     444 	ld	e, (hl)
      00018E 0A                     445 	ld	a, (bc)
      00018F 3C                     446 	inc	a
      000190 63                     447 	ld	h, e
                                    448 ;	spillPairReg hl
                                    449 ;	spillPairReg hl
      000191 E5                     450 	push	hl
      000192 33                     451 	inc	sp
      000193 F5                     452 	push	af
      000194 33                     453 	inc	sp
      000195 C5                     454 	push	bc
      000196 CDr00r00               455 	call	_moveFishTo
      000199 E8 04                  456 	add	sp, #4
                                    457 ;main.c:81: switch(joypad()) {
      00019B CDr00r00               458 	call	_joypad
      00019E 7B                     459 	ld	a, e
                                    460 ;main.c:76: line(80, 0, 80, fishingRod.yHook - 16);
      00019F 21r04r00               461 	ld	hl, #_fishingRod
      0001A2 6E                     462 	ld	l, (hl)
                                    463 ;	spillPairReg hl
                                    464 ;main.c:84: fishingRod.yHook -= 1;
      0001A3 4D                     465 	ld	c, l
                                    466 ;main.c:81: switch(joypad()) {
      0001A4 FE 04                  467 	cp	a, #0x04
      0001A6 28 06                  468 	jr	Z, 00101$
      0001A8 D6 08                  469 	sub	a, #0x08
      0001AA 28 40                  470 	jr	Z, 00104$
      0001AC 18 61                  471 	jr	00107$
                                    472 ;main.c:82: case J_UP:
      0001AE                        473 00101$:
                                    474 ;main.c:83: if(fishingRod.yHook > 20) {
      0001AE 3E 14                  475 	ld	a, #0x14
      0001B0 95                     476 	sub	a, l
      0001B1 30 5C                  477 	jr	NC, 00107$
                                    478 ;main.c:84: fishingRod.yHook -= 1;
      0001B3 0D                     479 	dec	c
      0001B4 21r04r00               480 	ld	hl, #_fishingRod
      0001B7 71                     481 	ld	(hl), c
                                    482 ;main.c:86: color(WHITE, WHITE, SOLID);
      0001B8 AF                     483 	xor	a, a
      0001B9 0F                     484 	rrca
      0001BA F5                     485 	push	af
      0001BB AF                     486 	xor	a, a
      0001BC F5                     487 	push	af
      0001BD 33                     488 	inc	sp
      0001BE CDr00r00               489 	call	_color
      0001C1 E8 03                  490 	add	sp, #3
                                    491 ;main.c:76: line(80, 0, 80, fishingRod.yHook - 16);
      0001C3 FAr04r00               492 	ld	a, (#_fishingRod + 0)
                                    493 ;main.c:84: fishingRod.yHook -= 1;
                                    494 ;main.c:87: line(80, fishingRod.yHook - 16, 80, fishingRod.yHook - 14);
      0001C6 4F                     495 	ld	c, a
      0001C7 C6 F2                  496 	add	a, #0xf2
      0001C9 47                     497 	ld	b, a
      0001CA 79                     498 	ld	a, c
      0001CB C6 F0                  499 	add	a, #0xf0
      0001CD C5                     500 	push	bc
      0001CE 33                     501 	inc	sp
      0001CF 26 50                  502 	ld	h, #0x50
                                    503 ;	spillPairReg hl
                                    504 ;	spillPairReg hl
      0001D1 E5                     505 	push	hl
      0001D2 33                     506 	inc	sp
      0001D3 67                     507 	ld	h, a
      0001D4 2E 50                  508 	ld	l, #0x50
      0001D6 E5                     509 	push	hl
      0001D7 CDr00r00               510 	call	_line
      0001DA E8 04                  511 	add	sp, #4
                                    512 ;main.c:88: color(BLACK, BLACK, SOLID);
      0001DC AF                     513 	xor	a, a
      0001DD 67                     514 	ld	h, a
      0001DE 2E 03                  515 	ld	l, #0x03
      0001E0 E5                     516 	push	hl
      0001E1 3E 03                  517 	ld	a, #0x03
      0001E3 F5                     518 	push	af
      0001E4 33                     519 	inc	sp
      0001E5 CDr00r00               520 	call	_color
      0001E8 E8 03                  521 	add	sp, #3
                                    522 ;main.c:90: break;
      0001EA 18 23                  523 	jr	00107$
                                    524 ;main.c:91: case J_DOWN:
      0001EC                        525 00104$:
                                    526 ;main.c:92: if(fishingRod.yHook<152) {
      0001EC 7D                     527 	ld	a, l
      0001ED D6 98                  528 	sub	a, #0x98
      0001EF 30 1E                  529 	jr	NC, 00107$
                                    530 ;main.c:93: fishingRod.yHook += 1;
      0001F1 0C                     531 	inc	c
      0001F2 21r04r00               532 	ld	hl, #_fishingRod
      0001F5 71                     533 	ld	(hl), c
                                    534 ;main.c:76: line(80, 0, 80, fishingRod.yHook - 16);
      0001F6 FAr04r00               535 	ld	a, (#_fishingRod + 0)
                                    536 ;main.c:84: fishingRod.yHook -= 1;
                                    537 ;main.c:94: line(80, fishingRod.yHook - 16, 80, fishingRod.yHook - 17);
      0001F9 4F                     538 	ld	c, a
      0001FA C6 EF                  539 	add	a, #0xef
      0001FC 47                     540 	ld	b, a
      0001FD 79                     541 	ld	a, c
      0001FE C6 F0                  542 	add	a, #0xf0
      000200 C5                     543 	push	bc
      000201 33                     544 	inc	sp
      000202 26 50                  545 	ld	h, #0x50
                                    546 ;	spillPairReg hl
                                    547 ;	spillPairReg hl
      000204 E5                     548 	push	hl
      000205 33                     549 	inc	sp
      000206 67                     550 	ld	h, a
      000207 2E 50                  551 	ld	l, #0x50
      000209 E5                     552 	push	hl
      00020A CDr00r00               553 	call	_line
      00020D E8 04                  554 	add	sp, #4
                                    555 ;main.c:97: }
      00020F                        556 00107$:
                                    557 ;main.c:98: move_sprite(fishingRod.hookSprite, 84,fishingRod.yHook);
      00020F 21r04r00               558 	ld	hl, #_fishingRod
      000212 4E                     559 	ld	c, (hl)
      000213 21r05r00               560 	ld	hl, #(_fishingRod + 1)
                                    561 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      000216 6E                     562 	ld	l, (hl)
                                    563 ;	spillPairReg hl
                                    564 ;	spillPairReg hl
      000217 26 00                  565 	ld	h, #0x00
                                    566 ;	spillPairReg hl
                                    567 ;	spillPairReg hl
      000219 29                     568 	add	hl, hl
      00021A 29                     569 	add	hl, hl
      00021B 11r00r00               570 	ld	de, #_shadow_OAM
      00021E 19                     571 	add	hl, de
                                    572 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      00021F 79                     573 	ld	a, c
      000220 22                     574 	ld	(hl+), a
      000221 36 54                  575 	ld	(hl), #0x54
                                    576 ;c:/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      000223 21r10r00               577 	ld	hl, #(_shadow_OAM + 16)
                                    578 ;c:/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      000226 3E 64                  579 	ld	a, #0x64
      000228 22                     580 	ld	(hl+), a
      000229 36 64                  581 	ld	(hl), #0x64
                                    582 ;main.c:99: move_sprite(4, 100, 100);
                                    583 ;main.c:101: }
      00022B C3r84r01               584 	jp	00109$
      00022E                        585 ___str_0:
      00022E 50 52 45 53 53 20 53   586 	.ascii "PRESS START!"
             54 41 52 54 21
      00023A 00                     587 	.db 0x00
      00023B                        588 ___str_2:
      00023B 0A                     589 	.db 0x0a
      00023C 0A                     590 	.db 0x0a
      00023D 0A                     591 	.db 0x0a
      00023E 0A                     592 	.db 0x0a
      00023F 0A                     593 	.db 0x0a
      000240 0A                     594 	.db 0x0a
      000241 0A                     595 	.db 0x0a
      000242 0A                     596 	.db 0x0a
      000243 0A                     597 	.db 0x0a
      000244 0A                     598 	.db 0x0a
      000245 0A                     599 	.db 0x0a
      000246 0A                     600 	.db 0x0a
      000247 0A                     601 	.db 0x0a
      000248 0A                     602 	.db 0x0a
      000249 0A                     603 	.db 0x0a
      00024A 0A                     604 	.db 0x0a
      00024B 0A                     605 	.db 0x0a
      00024C 00                     606 	.db 0x00
                                    607 	.area _CODE
                                    608 	.area _INITIALIZER
      000000                        609 __xinit__i:
      000000 00                     610 	.db #0x00	; 0
                                    611 	.area _CABS (ABS)
